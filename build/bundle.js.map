{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/parseuri/index.js","../../node_modules/ms/index.js","../../node_modules/debug/src/common.js","../../node_modules/debug/src/browser.js","../../node_modules/socket.io-client/build/url.js","../../node_modules/has-cors/index.js","../../node_modules/engine.io-client/lib/globalThis.browser.js","../../node_modules/engine.io-client/lib/xmlhttprequest.js","../../node_modules/engine.io-parser/lib/commons.js","../../node_modules/engine.io-parser/lib/encodePacket.browser.js","../../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../../node_modules/engine.io-parser/lib/decodePacket.browser.js","../../node_modules/engine.io-parser/lib/index.js","../../node_modules/component-emitter/index.js","../../node_modules/engine.io-client/lib/transport.js","../../node_modules/yeast/index.js","../../node_modules/parseqs/index.js","../../node_modules/engine.io-client/lib/transports/polling.js","../../node_modules/engine.io-client/lib/util.js","../../node_modules/engine.io-client/lib/transports/polling-xhr.js","../../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../../node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/lib/transports/websocket.js","../../node_modules/engine.io-client/lib/transports/index.js","../../node_modules/engine.io-client/lib/socket.js","../../node_modules/engine.io-client/lib/index.js","../../node_modules/socket.io-parser/dist/is-binary.js","../../node_modules/socket.io-parser/dist/binary.js","../../node_modules/socket.io-parser/dist/index.js","../../node_modules/socket.io-client/build/on.js","../../node_modules/socket.io-client/build/typed-events.js","../../node_modules/socket.io-client/build/socket.js","../../node_modules/backo2/index.js","../../node_modules/socket.io-client/build/manager.js","../../node_modules/socket.io-client/build/index.js","../../src/hex/HexBoard.ts","../../node_modules/socket.io-client/wrapper.mjs","../../src/hex/ai/RandomAI.ts","../../src/hex/ai/MostWinningCellAI.ts","../../src/hex/Hex.ts","../../src/hex/DarkHex.ts","../../src/components/MainMenu.svelte","../../src/components/HexBoard.svelte","../../src/components/GameMenu.svelte","../../src/components/HexOnline.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    var _a;\n    const append_styles_to = get_root_for_styles(target);\n    if (!((_a = append_styles_to) === null || _a === void 0 ? void 0 : _a.getElementById(style_sheet_id))) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_node(node) {\n    if (!node)\n        return document;\n    return (node.getRootNode ? node.getRootNode() : node.ownerDocument); // check for getRootNode because IE is still supported\n}\nfunction get_root_for_styles(node) {\n    const root = get_root_for_node(node);\n    return root.host ? root : root;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_styles(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_node(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.40.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_node, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n\n    const pause = () => {\n      debug(\"paused\");\n      this.readyState = \"paused\";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug(\"polling got data %s\", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug(\"writing close packet\");\n      this.write([{ type: \"close\" }]);\n    };\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + this.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = this.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","const globalThis = require(\"../globalThis\");\nconst nextTick = (() => {\n  const isPromiseAvailable =\n    typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return cb => setTimeout(cb, 0);\n  }\n})();\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\",\n  nextTick\n};\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","const XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          \"beforeunload\",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\");\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      setTimeout(() => {\n        this.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", this.onDrain.bind(this))\n      .on(\"packet\", this.onPacket.bind(this))\n      .on(\"error\", this.onError.bind(this))\n      .on(\"close\", () => {\n        this.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          this.upgrading = true;\n          this.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            this.emit(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          this.emit(\"upgradeError\", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      this.emit(\"upgradeError\", error);\n    };\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.removeListener(\"close\", onclose);\n      this.removeListener(\"upgrading\", onupgrade);\n    };\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"ping\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener(\"upgrade\", cleanupAndClose);\n      this.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, \"open\", this.onopen.bind(this)),\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_1.on(io, \"error\", this.onerror.bind(this)),\n            on_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst socket_1 = require(\"./socket\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n","export var HexPlayerColor;\n(function (HexPlayerColor) {\n    HexPlayerColor[HexPlayerColor[\"Black\"] = 0] = \"Black\";\n    HexPlayerColor[HexPlayerColor[\"White\"] = 1] = \"White\";\n})(HexPlayerColor || (HexPlayerColor = {}));\nexport var CellState;\n(function (CellState) {\n    CellState[CellState[\"Empty\"] = 0] = \"Empty\";\n    CellState[CellState[\"White\"] = 1] = \"White\";\n    CellState[CellState[\"WhiteWest\"] = 2] = \"WhiteWest\";\n    CellState[CellState[\"WhiteEast\"] = 3] = \"WhiteEast\";\n    CellState[CellState[\"WhiteWin\"] = 4] = \"WhiteWin\";\n    CellState[CellState[\"Black\"] = 5] = \"Black\";\n    CellState[CellState[\"BlackNorth\"] = 6] = \"BlackNorth\";\n    CellState[CellState[\"BlackSouth\"] = 7] = \"BlackSouth\";\n    CellState[CellState[\"BlackWin\"] = 8] = \"BlackWin\";\n})(CellState || (CellState = {}));\nexport class HexState {\n    constructor(size) {\n        this.board = new Uint8Array(size).fill(CellState.Empty);\n    }\n}\nexport class HexBoard {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.size = this.width * this.height;\n        this.neighbor_list = Array(this.size)\n            .fill(0)\n            .map((u) => (u = []));\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const cell = this.neighbor_list[this.getIndex(x, y)];\n                if (x > 0) {\n                    cell.push(this.getIndex(x - 1, y));\n                }\n                if (y > 0) {\n                    cell.push(this.getIndex(x, y - 1));\n                }\n                if (x < this.width - 1) {\n                    cell.push(this.getIndex(x + 1, y));\n                }\n                if (y < this.height - 1) {\n                    cell.push(this.getIndex(x, y + 1));\n                }\n                if (x > 0 && y < this.height - 1) {\n                    cell.push(this.getIndex(x - 1, y + 1));\n                }\n                if (y > 0 && x < this.width - 1) {\n                    cell.push(this.getIndex(x + 1, y - 1));\n                }\n            }\n        }\n    }\n    getIndex(x, y) {\n        return y * this.width + x;\n    }\n    getXY(pos) {\n        const x = pos & this.width;\n        const y = Math.floor(pos / this.width);\n        return [x, y];\n    }\n    dfs(state, pos, eq_cell_state, move_cell_state) {\n        const neighbors = this.neighbor_list[pos];\n        for (const neighbor of neighbors) {\n            if (state.board[neighbor] === eq_cell_state) {\n                state.board[neighbor] = move_cell_state;\n                this.dfs(state, neighbor, eq_cell_state, move_cell_state);\n            }\n        }\n    }\n    move(state, player, pos) {\n        switch (player) {\n            case HexPlayerColor.Black: {\n                let north_connected = false;\n                let south_connected = false;\n                if (pos < this.width) {\n                    north_connected = true;\n                }\n                else if (pos >= this.size - this.width) {\n                    south_connected = true;\n                }\n                const neighbors = this.neighbor_list[pos];\n                for (const neighbor of neighbors) {\n                    if (state.board[neighbor] === CellState.BlackNorth) {\n                        north_connected = true;\n                    }\n                    else if (state.board[neighbor] === CellState.BlackSouth) {\n                        south_connected = true;\n                    }\n                }\n                if (north_connected && south_connected) {\n                    state.board[pos] = CellState.BlackWin;\n                    return true;\n                }\n                else if (north_connected) {\n                    state.board[pos] = CellState.BlackNorth;\n                    this.dfs(state, pos, CellState.Black, CellState.BlackNorth);\n                }\n                else if (south_connected) {\n                    state.board[pos] = CellState.BlackSouth;\n                    this.dfs(state, pos, CellState.Black, CellState.BlackSouth);\n                }\n                else {\n                    state.board[pos] = CellState.Black;\n                }\n                break;\n            }\n            case HexPlayerColor.White: {\n                let west_connected = false;\n                let east_connected = false;\n                if (pos % this.width === 0) {\n                    west_connected = true;\n                }\n                else if (pos % this.width === this.width - 1) {\n                    east_connected = true;\n                }\n                const neighbors = this.neighbor_list[pos];\n                for (const neighbor of neighbors) {\n                    if (state.board[neighbor] === CellState.WhiteWest) {\n                        west_connected = true;\n                    }\n                    else if (state.board[neighbor] === CellState.WhiteEast) {\n                        east_connected = true;\n                    }\n                }\n                if (west_connected && east_connected) {\n                    state.board[pos] = CellState.WhiteWin;\n                    return true;\n                }\n                else if (west_connected) {\n                    state.board[pos] = CellState.WhiteWest;\n                    this.dfs(state, pos, CellState.White, CellState.WhiteWest);\n                }\n                else if (east_connected) {\n                    state.board[pos] = CellState.WhiteEast;\n                    this.dfs(state, pos, CellState.White, CellState.WhiteEast);\n                }\n                else {\n                    state.board[pos] = CellState.White;\n                }\n                break;\n            }\n        }\n        return false;\n    }\n}\nexport const switchPlayer = (player) => {\n    return player === HexPlayerColor.Black ? HexPlayerColor.White : HexPlayerColor.Black;\n};\nexport const reduceCellState = (cellState) => {\n    switch (cellState) {\n        case CellState.Empty:\n            return CellState.Empty;\n        case CellState.Black:\n        case CellState.BlackNorth:\n        case CellState.BlackSouth:\n        case CellState.BlackWin:\n            return CellState.Black;\n        case CellState.White:\n        case CellState.WhiteEast:\n        case CellState.WhiteWest:\n        case CellState.WhiteWin:\n            return CellState.White;\n    }\n};\n","import io from \"./build/index.js\";\n\nexport const Manager = io.Manager;\nexport const Socket = io.Socket;\nexport { io };\nexport default io;\n","import { CellState } from \"src/hex/HexBoard\";\nexport class RandomAI {\n    constructor(hexBoard) {\n        this.hexBoard = hexBoard;\n    }\n    getHexMove(state, player) {\n        const emptyCells = [];\n        for (let i = 0; i < this.hexBoard.size; i++) {\n            if (state.board[i] === CellState.Empty) {\n                emptyCells.push(i);\n            }\n        }\n        return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    }\n    getDarkHexMove(visibleBoard, player) {\n        const emptyCells = [];\n        for (let i = 0; i < this.hexBoard.size; i++) {\n            if (visibleBoard[i] === CellState.Empty) {\n                emptyCells.push(i);\n            }\n        }\n        return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    }\n    getReverseHexMove(state, player) {\n        const emptyCells = [];\n        for (let i = 0; i < this.hexBoard.size; i++) {\n            if (state.board[i] === CellState.Empty) {\n                emptyCells.push(i);\n            }\n        }\n        return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    }\n    getDarkReverseHexMove(visibleBoard, player) {\n        const emptyCells = [];\n        for (let i = 0; i < this.hexBoard.size; i++) {\n            if (visibleBoard[i] === CellState.Empty) {\n                emptyCells.push(i);\n            }\n        }\n        return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    }\n}\n","import { CellState, switchPlayer } from \"src/hex/HexBoard\";\nexport class MostWinningCellAI {\n    constructor(hexBoard) {\n        this.hexBoard = hexBoard;\n    }\n    getHexMove(state, player) {\n        const emptyCells = [];\n        for (let i = 0; i < this.hexBoard.size; i++) {\n            if (state.board[i] === CellState.Empty) {\n                emptyCells.push(i);\n            }\n        }\n        const winArray = new Array(this.hexBoard.size).fill(0);\n        for (let i = 0; i < 10000; i++) {\n            const newState = { board: state.board.slice() };\n            let currentPlayer = player;\n            const newEmptyCells = emptyCells.slice();\n            shuffle(newEmptyCells);\n            for (const pos of newEmptyCells) {\n                if (this.hexBoard.move(newState, currentPlayer, pos)) {\n                    if (currentPlayer === player) {\n                        winArray[pos] += 1;\n                    }\n                    break;\n                }\n                currentPlayer = switchPlayer(currentPlayer);\n            }\n        }\n        let max = -1;\n        let maxIndex = 0;\n        for (const emptyCell of emptyCells) {\n            if (winArray[emptyCell] > max) {\n                maxIndex = emptyCell;\n                max = winArray[emptyCell];\n            }\n        }\n        return maxIndex;\n    }\n}\nconst shuffle = (array) => {\n    for (let currentIndex = array.length; currentIndex !== 0;) {\n        let randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n};\n","import { io } from \"socket.io-client\";\nimport { CellState, HexBoard, HexPlayerColor, HexState, switchPlayer } from \"src/hex/HexBoard\";\nimport { RandomAI } from \"src/hex/ai/RandomAI\";\nimport { MostWinningCellAI } from \"src/hex/ai/MostWinningCellAI\";\nexport var HexPlayerType;\n(function (HexPlayerType) {\n    HexPlayerType[\"Local\"] = \"local\";\n    HexPlayerType[\"Remote\"] = \"remote\";\n    HexPlayerType[\"Random\"] = \"random\";\n    HexPlayerType[\"MostWinningCell\"] = \"most-winning-cell\";\n    // Resistace = \"resistance\",\n    // MCTS = \"mcts\",\n})(HexPlayerType || (HexPlayerType = {}));\nexport var ReverseHexPlayerType;\n(function (ReverseHexPlayerType) {\n    ReverseHexPlayerType[\"Local\"] = \"local\";\n    ReverseHexPlayerType[\"Remote\"] = \"remote\";\n    ReverseHexPlayerType[\"Random\"] = \"random\";\n})(ReverseHexPlayerType || (ReverseHexPlayerType = {}));\nexport class HexPlayer {\n    constructor(type, ai) {\n        this.type = type;\n        this.ai = ai;\n    }\n}\nexport class HexGame {\n    constructor({ width, height, reverse, swapRule, playerTypes, serverAddress }, onUpdateCallback, socket) {\n        this.players = Array(2).fill(null);\n        this.history = [];\n        this.messages = [];\n        this.started = false;\n        this.quited = false;\n        this.onUpdateCallback = onUpdateCallback;\n        if (width !== height) {\n            swapRule = false;\n        }\n        this.options = { width, height, reverse, swapRule, playerTypes, serverAddress };\n        this.board = new HexBoard(width, height);\n        this.currentState = new HexState(this.board.size);\n        this.currentPlayer = HexPlayerColor.Black;\n        let online = false;\n        if (this.options.reverse) {\n            for (let i = 0; i < playerTypes.length; i++) {\n                switch (playerTypes[i]) {\n                    case HexPlayerType.Random:\n                        this.players[i] = new HexPlayer(HexPlayerType.Random, new RandomAI(this.board));\n                        break;\n                    case HexPlayerType.Remote:\n                        this.players[i] = new HexPlayer(HexPlayerType.Remote);\n                        online = true;\n                        break;\n                    case HexPlayerType.Local:\n                        this.players[i] = new HexPlayer(HexPlayerType.Local);\n                        break;\n                }\n            }\n        }\n        else {\n            for (let i = 0; i < playerTypes.length; i++) {\n                switch (playerTypes[i]) {\n                    case HexPlayerType.Random:\n                        this.players[i] = new HexPlayer(HexPlayerType.Random, new RandomAI(this.board));\n                        break;\n                    case HexPlayerType.MostWinningCell:\n                        this.players[i] = new HexPlayer(HexPlayerType.MostWinningCell, new MostWinningCellAI(this.board));\n                        break;\n                    case HexPlayerType.Remote:\n                        this.players[i] = new HexPlayer(HexPlayerType.Remote);\n                        online = true;\n                        break;\n                    case HexPlayerType.Local:\n                        this.players[i] = new HexPlayer(HexPlayerType.Local);\n                        break;\n                }\n            }\n        }\n        if (online) {\n            this.socket_connect(socket);\n        }\n        else {\n            this.started = true;\n        }\n        const nextPlayer = this.players[this.currentPlayer];\n        if (nextPlayer === null || nextPlayer === void 0 ? void 0 : nextPlayer.ai) {\n            this.moveInterval = setTimeout(() => {\n                if (this.options.reverse) {\n                    this.move(nextPlayer.ai.getReverseHexMove(this.currentState, this.currentPlayer));\n                }\n                else {\n                    this.move(nextPlayer.ai.getHexMove(this.currentState, this.currentPlayer));\n                }\n            }, 100);\n        }\n    }\n    socket_connect(socket) {\n        if (!socket) {\n            const url = new URL(\"/hex\", this.options.serverAddress);\n            socket = io(url.toString(), {\n                query: { options: JSON.stringify(this.options) },\n                reconnection: false,\n            });\n            socket.on(\"joined\", (inviteLink) => {\n                this.inviteLink = inviteLink;\n                this.messages.push({ source: \"link\", message: inviteLink });\n                this.messages.push({\n                    source: \"game\",\n                    message: \"You are player \" + (this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\"),\n                });\n                this.onUpdateCallback(this);\n            });\n        }\n        else {\n            this.messages.push({\n                source: \"game\",\n                message: `Game: ${this.options.reverse ? \"Reverse \" : \"\"}Hex\\nWidth: ${this.options.width}\\nHeigth: ${this.options.height}\\nSwap rule: ${this.options.swapRule ? \"True\" : \"False\"}`,\n            });\n            this.messages.push({\n                source: \"game\",\n                message: \"You are player \" + (this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\"),\n            });\n        }\n        this.socket = socket;\n        this.socket.once(\"disconnect\", () => {\n            this.quit();\n        });\n        this.socket.on(\"connect_error\", () => {\n            this.quit();\n        });\n        this.socket.on(\"started\", () => {\n            this.start();\n        });\n        this.socket.on(\"move\", (moveInfo) => {\n            if (moveInfo.player === this.currentPlayer &&\n                this.options.playerTypes[moveInfo.player] === \"remote\" &&\n                this.currentState.board[moveInfo.pos] === CellState.Empty) {\n                this.move(moveInfo.pos);\n            }\n            else {\n                this.quit();\n            }\n        });\n        this.socket.on(\"swap\", () => {\n            if (this.options.swapRule && this.history.length === 1) {\n                this.swap();\n            }\n            else {\n                this.quit;\n            }\n        });\n        this.socket.on(\"message\", (message) => {\n            this.messages.push(message);\n            this.onUpdateCallback(this);\n        });\n    }\n    sendMessage(message) {\n        if (this.socket && this.socket.connected && this.started) {\n            const msg = { source: this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\", message };\n            this.messages.push(msg);\n            this.socket.emit(\"message\", msg);\n            this.onUpdateCallback(this);\n        }\n    }\n    start() {\n        this.started = true;\n        this.messages.push({ source: \"game\", message: \"Game started\" });\n        this.onUpdateCallback(this);\n    }\n    quit() {\n        var _a;\n        this.quited = true;\n        this.messages.push({ source: \"game\", message: \"A player has quit or disconnected\" });\n        if (this.moveInterval !== undefined) {\n            clearInterval(this.moveInterval);\n        }\n        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.onUpdateCallback(this);\n    }\n    local_move(pos) {\n        var _a;\n        if (this.started && !this.quited && this.win === undefined) {\n            if (((_a = this.players[this.currentPlayer]) === null || _a === void 0 ? void 0 : _a.type) === HexPlayerType.Local) {\n                if (pos >= 0 && pos < this.board.size) {\n                    if (this.currentState.board[pos] === CellState.Empty) {\n                        if (this.socket) {\n                            this.socket.emit(\"move\", { player: this.currentPlayer, pos });\n                        }\n                        this.move(pos);\n                    }\n                }\n            }\n        }\n    }\n    move(pos) {\n        this.history.push({ pos, color: this.currentPlayer });\n        const gameOver = this.board.move(this.currentState, this.currentPlayer, pos);\n        if (gameOver) {\n            if (this.options.reverse) {\n                this.win = switchPlayer(this.currentPlayer);\n            }\n            else {\n                this.win = this.currentPlayer;\n            }\n        }\n        this.currentPlayer = switchPlayer(this.currentPlayer);\n        this.onUpdateCallback(this);\n        if (!gameOver) {\n            const nextPlayer = this.players[this.currentPlayer];\n            if (nextPlayer === null || nextPlayer === void 0 ? void 0 : nextPlayer.ai) {\n                this.moveInterval = setTimeout(() => {\n                    if (this.options.reverse) {\n                        this.move(nextPlayer.ai.getReverseHexMove(this.currentState, this.currentPlayer));\n                    }\n                    else {\n                        this.move(nextPlayer.ai.getHexMove(this.currentState, this.currentPlayer));\n                    }\n                }, 100);\n            }\n        }\n    }\n    local_swap() {\n        var _a;\n        if (this.started && !this.quited && this.win === undefined) {\n            if (((_a = this.players[this.currentPlayer]) === null || _a === void 0 ? void 0 : _a.type) === HexPlayerType.Local) {\n                if (this.options.swapRule && this.history.length === 1) {\n                    if (this.socket) {\n                        this.socket.emit(\"swap\");\n                    }\n                    this.swap();\n                }\n            }\n        }\n    }\n    swap() {\n        const firstMove = this.history[0];\n        const pos = firstMove.pos;\n        this.currentState.board[pos] = CellState.Empty;\n        const [x, y] = this.board.getXY(pos);\n        const swapPos = this.board.getIndex(y, x);\n        this.history.push({ pos: swapPos, color: this.currentPlayer, swap: true });\n        this.board.move(this.currentState, this.currentPlayer, swapPos);\n        this.currentPlayer = switchPlayer(this.currentPlayer);\n        this.onUpdateCallback(this);\n    }\n}\n","import { io } from \"socket.io-client\";\nimport { CellState, HexBoard, HexPlayerColor, HexState, reduceCellState, switchPlayer } from \"src/hex/HexBoard\";\nimport { RandomAI } from \"src/hex/ai/RandomAI\";\nexport var DarkHexPlayerType;\n(function (DarkHexPlayerType) {\n    DarkHexPlayerType[\"Local\"] = \"local\";\n    DarkHexPlayerType[\"Remote\"] = \"remote\";\n    DarkHexPlayerType[\"Random\"] = \"random\";\n})(DarkHexPlayerType || (DarkHexPlayerType = {}));\nexport var DarkReverseHexPlayerType;\n(function (DarkReverseHexPlayerType) {\n    DarkReverseHexPlayerType[\"Local\"] = \"local\";\n    DarkReverseHexPlayerType[\"Remote\"] = \"remote\";\n    DarkReverseHexPlayerType[\"Random\"] = \"random\";\n})(DarkReverseHexPlayerType || (DarkReverseHexPlayerType = {}));\nexport class DarkHexPlayer {\n    constructor(type, ai) {\n        this.type = type;\n        this.ai = ai;\n    }\n}\nexport class DarkHexGame {\n    constructor({ width, height, reverse, swapRule, playerTypes, serverAddress }, onUpdateCallback, socket) {\n        this.players = Array(2).fill(null);\n        this.visibleBoards = Array(2).fill(null);\n        this.history = [];\n        this.messages = [];\n        this.started = false;\n        this.quited = false;\n        this.pending = false;\n        this.onUpdateCallback = onUpdateCallback;\n        this.options = { width, height, reverse, swapRule, playerTypes, serverAddress };\n        this.board = new HexBoard(width, height);\n        this.currentPlayer = HexPlayerColor.Black;\n        let online = false;\n        if (this.options.reverse) {\n            for (let i = 0; i < playerTypes.length; i++) {\n                switch (playerTypes[i]) {\n                    case DarkHexPlayerType.Random:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Random, new RandomAI(this.board));\n                        break;\n                    case DarkHexPlayerType.Remote:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Remote);\n                        online = true;\n                        break;\n                    case DarkHexPlayerType.Local:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Local);\n                        break;\n                }\n            }\n        }\n        else {\n            for (let i = 0; i < playerTypes.length; i++) {\n                switch (playerTypes[i]) {\n                    case DarkHexPlayerType.Random:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Random, new RandomAI(this.board));\n                        break;\n                    case DarkHexPlayerType.Remote:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Remote);\n                        online = true;\n                        break;\n                    case DarkHexPlayerType.Local:\n                        this.players[i] = new DarkHexPlayer(DarkHexPlayerType.Local);\n                        break;\n                }\n            }\n        }\n        for (let i = 0; i < playerTypes.length; i++) {\n            if (playerTypes[i] !== \"remote\") {\n                this.visibleBoards[i] = new Uint8Array(width * height);\n            }\n        }\n        if (online) {\n            this.socket_connect(socket);\n        }\n        else {\n            this.currentState = new HexState(this.board.size);\n            this.started = true;\n        }\n        const nextPlayer = this.players[this.currentPlayer];\n        if (nextPlayer === null || nextPlayer === void 0 ? void 0 : nextPlayer.ai) {\n            this.moveInterval = setTimeout(() => {\n                if (this.options.reverse) {\n                    this.move(nextPlayer.ai.getDarkReverseHexMove(this.visibleBoards[this.currentPlayer], this.currentPlayer));\n                }\n                else {\n                    this.move(nextPlayer.ai.getDarkHexMove(this.visibleBoards[this.currentPlayer], this.currentPlayer));\n                }\n            }, 100);\n        }\n    }\n    socket_connect(socket) {\n        if (!socket) {\n            const url = new URL(\"/darkhex\", this.options.serverAddress);\n            socket = io(url.toString(), {\n                query: { options: JSON.stringify(this.options) },\n                reconnection: false,\n            });\n            socket.on(\"joined\", (inviteLink) => {\n                this.inviteLink = inviteLink;\n                this.messages.push({ source: \"link\", message: inviteLink });\n                this.messages.push({\n                    source: \"game\",\n                    message: \"You are player \" + (this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\"),\n                });\n                this.onUpdateCallback(this);\n            });\n        }\n        else {\n            this.messages.push({\n                source: \"game\",\n                message: `Game: Dark ${this.options.reverse ? \"Reverse \" : \"\"}Hex\\nWidth: ${this.options.width}\\nHeigth: ${this.options.height}\\nSwap rule: ${this.options.swapRule ? \"True\" : \"False\"}`,\n            });\n            this.messages.push({\n                source: \"game\",\n                message: \"You are player \" + (this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\"),\n            });\n        }\n        this.socket = socket;\n        this.socket.once(\"disconnect\", () => {\n            this.quit();\n        });\n        this.socket.on(\"connect_error\", () => {\n            this.quit();\n        });\n        this.socket.on(\"started\", () => {\n            this.start();\n        });\n        this.socket.on(\"move\", ({ state, pos, switchColor }) => {\n            this.remote_move({ state, pos, switchColor });\n        });\n        this.socket.on(\"win\", ({ win, board }) => {\n            this.win = win;\n            this.currentState = { board: new Uint8Array(board) };\n            this.onUpdateCallback(this);\n        });\n        this.socket.on(\"message\", (message) => {\n            this.messages.push(message);\n            this.onUpdateCallback(this);\n        });\n    }\n    sendMessage(message) {\n        if (this.socket) {\n            const msg = { source: this.options.playerTypes[0] === \"local\" ? \"red\" : \"blue\", message };\n            this.messages.push(msg);\n            this.socket.emit(\"message\", msg);\n            this.onUpdateCallback(this);\n        }\n    }\n    start() {\n        this.started = true;\n        this.messages.push({ source: \"game\", message: \"Game started\" });\n        this.onUpdateCallback(this);\n    }\n    quit() {\n        var _a;\n        this.quited = true;\n        this.messages.push({ source: \"game\", message: \"A player has quit or disconnected\" });\n        if (this.moveInterval !== undefined) {\n            clearInterval(this.moveInterval);\n        }\n        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.onUpdateCallback(this);\n    }\n    local_move(pos) {\n        var _a;\n        if (this.started && !this.quited && this.win === undefined && !this.pending) {\n            if (((_a = this.players[this.currentPlayer]) === null || _a === void 0 ? void 0 : _a.type) === \"local\") {\n                if (pos >= 0 && pos < this.board.size) {\n                    if (this.visibleBoards[this.currentPlayer][pos] === CellState.Empty) {\n                        if (this.socket) {\n                            this.pending = true;\n                            this.socket.emit(\"move\", { player: this.currentPlayer, pos });\n                        }\n                        else {\n                            this.move(pos);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    remote_move({ state, pos, switchColor }) {\n        this.pending = false;\n        if (pos !== undefined) {\n            this.visibleBoards[this.currentPlayer][pos] = state;\n        }\n        if (switchColor) {\n            this.currentPlayer = switchPlayer(this.currentPlayer);\n        }\n        this.onUpdateCallback(this);\n    }\n    move(pos) {\n        var _a;\n        let gameOver = false;\n        if (this.currentState.board[pos] === CellState.Empty) {\n            (_a = this.history) === null || _a === void 0 ? void 0 : _a.push({ pos, color: this.currentPlayer });\n            gameOver = this.board.move(this.currentState, this.currentPlayer, pos);\n            this.visibleBoards[this.currentPlayer][pos] = reduceCellState(this.currentState.board[pos]);\n            if (gameOver) {\n                if (this.options.reverse) {\n                    this.win = switchPlayer(this.currentPlayer);\n                }\n                else {\n                    this.win = this.currentPlayer;\n                }\n            }\n            this.currentPlayer = switchPlayer(this.currentPlayer);\n        }\n        else {\n            this.visibleBoards[this.currentPlayer][pos] = reduceCellState(this.currentState.board[pos]);\n        }\n        this.onUpdateCallback(this);\n        if (!gameOver) {\n            const nextPlayer = this.players[this.currentPlayer];\n            if (nextPlayer === null || nextPlayer === void 0 ? void 0 : nextPlayer.ai) {\n                this.moveInterval = setTimeout(() => {\n                    if (this.options.reverse) {\n                        this.move(nextPlayer.ai.getDarkReverseHexMove(this.visibleBoards[this.currentPlayer], this.currentPlayer));\n                    }\n                    else {\n                        this.move(nextPlayer.ai.getDarkHexMove(this.visibleBoards[this.currentPlayer], this.currentPlayer));\n                    }\n                }, 100);\n            }\n        }\n    }\n}\n","<script lang=\"ts\" context=\"module\">\n  export interface HexMenuOptions {\n    dark: boolean;\n    reverse: boolean;\n    width: number;\n    height: number;\n    swapRule: boolean;\n    playerTypes: (HexPlayerType | DarkHexPlayerType | ReverseHexPlayerType | DarkReverseHexPlayerType)[];\n    serverAddress: string;\n  }\n</script>\n\n<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n\n  import { HexPlayerType, ReverseHexPlayerType } from \"src/hex/Hex\";\n  import { DarkHexPlayerType, DarkReverseHexPlayerType } from \"src/hex/DarkHex\";\n\n  enum HexGames {\n    Hex = \"hex\",\n    DarkHex = \"dark hex\",\n    ReverseHex = \"reverse hex\",\n    DarkReverseHex = \"dark reverse hex\",\n  }\n\n  let hexGame: HexGames = HexGames.Hex;\n\n  let options: HexMenuOptions = {\n    dark: false,\n    reverse: false,\n    width: 11,\n    height: 11,\n    swapRule: false,\n    playerTypes: [HexPlayerType.Local, HexPlayerType.Local],\n    serverAddress: \"http://localhost:4322\",\n  };\n\n  $: {\n    if (options.width !== options.height || options.dark) {\n      options.swapRule = false;\n    }\n  }\n\n  let playerTypeEnum:\n    | typeof HexPlayerType\n    | typeof DarkHexPlayerType\n    | typeof ReverseHexPlayerType\n    | typeof DarkReverseHexPlayerType = HexPlayerType;\n\n  $: {\n    switchHexGame(hexGame);\n  }\n\n  const switchHexGame = (hexGame: HexGames) => {\n    switch (hexGame) {\n      case HexGames.Hex:\n        playerTypeEnum = HexPlayerType;\n        options.playerTypes = [HexPlayerType.Local, HexPlayerType.Local];\n        options.dark = false;\n        options.reverse = false;\n        break;\n      case HexGames.DarkHex:\n        playerTypeEnum = DarkHexPlayerType;\n        options.playerTypes = [DarkHexPlayerType.Local, DarkHexPlayerType.Local];\n        options.dark = true;\n        options.reverse = false;\n        break;\n      case HexGames.ReverseHex:\n        playerTypeEnum = ReverseHexPlayerType;\n        options.playerTypes = [ReverseHexPlayerType.Local, ReverseHexPlayerType.Local];\n        options.dark = false;\n        options.reverse = true;\n        break;\n      case HexGames.DarkReverseHex:\n        playerTypeEnum = DarkReverseHexPlayerType;\n        options.playerTypes = [DarkReverseHexPlayerType.Local, DarkReverseHexPlayerType.Local];\n        options.dark = true;\n        options.reverse = true;\n        break;\n    }\n  };\n\n  const dispatch = createEventDispatcher();\n\n  const onSubmit = () => {\n    if (\n      (options.playerTypes[0] !== \"remote\" && options.playerTypes[1] !== \"remote\") ||\n      (options.playerTypes[0] === \"local\" && options.playerTypes[1] === \"remote\") ||\n      (options.playerTypes[1] === \"local\" && options.playerTypes[0] === \"remote\")\n    ) {\n      dispatch(\"submit\", options);\n    } else {\n      alert(\"You must have one local and one remote\");\n    }\n  };\n</script>\n\n<div class=\"container\">\n  <h2>Hex Online</h2>\n  <form on:submit|preventDefault={onSubmit}>\n    <select bind:value={hexGame}>\n      <option value=\"hex\">Hex</option>\n      <option value=\"dark hex\" title=\"Players cannot see each others moves\"> Dark Hex </option>\n      <option value=\"reverse hex\" title=\"First player to connect their sides loses\"> Reverse Hex </option>\n      <option value=\"dark reverse hex\" title=\"Dark Hex + Reverse Hex\"> Dark Reverse Hex </option>\n    </select>\n\n    <label>\n      Width\n      <input type=\"number\" bind:value={options.width} min=\"2\" max=\"32\" />\n    </label>\n\n    <label>\n      Height\n      <input type=\"number\" bind:value={options.height} min=\"2\" max=\"32\" />\n    </label>\n\n    <label>\n      Swap rule\n      <input\n        type=\"checkbox\"\n        bind:checked={options.swapRule}\n        disabled={options.width !== options.height || options.dark}\n      />\n    </label>\n\n    <label\n      >Player red\n      <select bind:value={options.playerTypes[0]}>\n        {#each Object.values(playerTypeEnum) as option (option)}\n          <option value={option}>{option}</option>\n        {/each}\n      </select>\n    </label>\n\n    <label\n      >Player blue\n      <select bind:value={options.playerTypes[1]}>\n        {#each Object.values(playerTypeEnum) as option (option)}\n          <option value={option}>{option}</option>\n        {/each}\n      </select>\n    </label>\n\n    <label\n      >Server address\n      <input type=\"text\" bind:value={options.serverAddress} />\n    </label>\n\n    <button type=\"submit\">New game</button>\n  </form>\n</div>\n\n<style lang=\"scss\">\n  .container {\n    grid-column: 1;\n    background-color: lightblue;\n\n    h2 {\n      text-align: center;\n      font-size: 2.4em;\n      margin: 0;\n      padding-top: 1em;\n      padding-bottom: 0.5em;\n    }\n\n    form {\n      padding: 20px;\n\n      * {\n        margin-top: 2px;\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n\n  import type { HexState } from \"src/hex/HexBoard\";\n  import { CellState } from \"src/hex/HexBoard\";\n  import { onDestroy, onMount } from \"svelte\";\n\n  type HexBoardCell = {\n    state: CellState;\n    canvasX: number;\n    canvasY: number;\n  };\n\n  // red = black\n  // blue = white\n\n  const SQRT3 = Math.sqrt(3);\n  const SQRT3_2 = Math.sqrt(3) / 2;\n  const HEXAGON_OFFSETS: { x: number; y: number }[] = [\n    { x: 0, y: 1 / SQRT3 }, // top\n    { x: 0.5, y: 0.5 / SQRT3 }, // top right\n    { x: 0.5, y: -0.5 / SQRT3 }, // bottom right\n    { x: 0, y: -1 / SQRT3 }, // bottom\n    { x: -0.5, y: -0.5 / SQRT3 }, // bottem left\n    { x: -0.5, y: 0.5 / SQRT3 }, // top left\n  ];\n\n  export let boardWidth: number;\n  export let boardHeight: number;\n  export let hexState: HexState;\n\n  const dispatch = createEventDispatcher();\n\n  let canvas: HTMLCanvasElement;\n  let ctx: CanvasRenderingContext2D | undefined;\n\n  let cellSize: number;\n  let cells: HexBoardCell[];\n  let backgroundColor = \"lightgray\";\n  let resizeObserver: ResizeObserver;\n\n  onMount(() => {\n    ctx = canvas.getContext(\"2d\")!;\n    resizeObserver = new ResizeObserver(() => {\n      update(boardWidth, boardHeight);\n    });\n    resizeObserver.observe(canvas);\n  });\n\n  onDestroy(() => {\n    resizeObserver.disconnect();\n  });\n\n  $: {\n    update(boardWidth, boardHeight);\n  }\n\n  $: {\n    partialUpdate(hexState);\n  }\n\n  const update = (boardWidth: number, boardHeight: number) => {\n    if (ctx) {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n      cells = Array(boardWidth * boardHeight)\n        .fill(0)\n        .map((u, i) => ({ state: hexState.board[i], canvasX: 0, canvasY: 0 }));\n      cellSize = Math.min(canvas.width / (boardWidth + boardHeight / 2), canvas.height / (boardHeight * SQRT3_2 + 1));\n      calculateCellCenters();\n      redrawBoard(ctx);\n    }\n  };\n\n  const partialUpdate = (hexState: HexState) => {\n    if (ctx) {\n      for (let i = 0; i < cells.length; i++) {\n        if (cells[i].state !== hexState.board[i]) {\n          updateCellState(ctx, i, hexState.board[i]);\n        }\n      }\n    }\n  };\n\n  const getIndex = (x: number, y: number) => {\n    return y * boardWidth + x;\n  };\n\n  const calculateCellCenters = () => {\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    for (let y = 0; y < boardHeight; y++) {\n      for (let x = 0; x < boardWidth; x++) {\n        const xoffset = x - (boardWidth - 1) / 2;\n        const yoffset = y - (boardHeight - 1) / 2;\n        const cell = cells[getIndex(x, y)];\n        cell.canvasX = centerX + cellSize * xoffset + (cellSize * yoffset) / 2;\n        cell.canvasY = centerY + SQRT3_2 * cellSize * yoffset;\n      }\n    }\n  };\n\n  const getClickedCell = (clickX: number, clickY: number): number | null => {\n    for (let i = 0; i < cells.length; i++) {\n      const cell = cells[i];\n      if (Math.hypot(cell.canvasX - clickX, cell.canvasY - clickY) < cellSize / 2 - 1) {\n        return i;\n      }\n    }\n    return null;\n  };\n\n  const onCanvasClick = (event: MouseEvent) => {\n    event.stopPropagation();\n\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const pos = getClickedCell(x, y);\n    if (pos !== null) {\n      dispatch(\"cellClick\", pos);\n    }\n  };\n\n  const updateCellState = (ctx: CanvasRenderingContext2D, pos: number, state: CellState) => {\n    const cell = cells[pos];\n    cell.state = state;\n\n    ctx.beginPath();\n    ctx.arc(cell.canvasX, cell.canvasY, cellSize / 3 + 2, 0, 2 * Math.PI);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    drawCell(ctx, cell);\n  };\n\n  const drawCell = (ctx: CanvasRenderingContext2D, cell: HexBoardCell) => {\n    let color: string;\n    switch (cell.state) {\n      case CellState.Black:\n      case CellState.BlackNorth:\n      case CellState.BlackSouth:\n      case CellState.BlackWin:\n        color = \"red\";\n        break;\n      case CellState.White:\n      case CellState.WhiteEast:\n      case CellState.WhiteWest:\n      case CellState.WhiteWin:\n        color = \"blue\";\n        break;\n      default:\n        color = backgroundColor;\n    }\n\n    ctx.beginPath();\n    ctx.arc(cell.canvasX, cell.canvasY, 0.33 * cellSize, 0, 2 * Math.PI);\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  const drawHexagonEdges = (ctx: CanvasRenderingContext2D) => {\n    ctx.lineCap = \"round\";\n\n    for (let y = 0; y < boardHeight; y++) {\n      for (let x = 0; x < boardWidth; x++) {\n        const { canvasX: hx, canvasY: hy } = cells[getIndex(x, y)];\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[0].x, hy + cellSize * HEXAGON_OFFSETS[0].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[1].x, hy + cellSize * HEXAGON_OFFSETS[1].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (y === boardHeight - 1) {\n          ctx.strokeStyle = \"red\";\n          ctx.lineWidth = 3;\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[1].x, hy + cellSize * HEXAGON_OFFSETS[1].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[2].x, hy + cellSize * HEXAGON_OFFSETS[2].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (x === boardWidth - 1) {\n          ctx.strokeStyle = \"blue\";\n          ctx.lineWidth = 3;\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[2].x, hy + cellSize * HEXAGON_OFFSETS[2].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[3].x, hy + cellSize * HEXAGON_OFFSETS[3].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (x === boardWidth - 1 && y > 0) {\n          ctx.strokeStyle = \"blue\";\n          ctx.lineWidth = 3;\n        }\n        if (y < 1) {\n          ctx.strokeStyle = \"red\";\n          ctx.lineWidth = 3;\n        }\n\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[3].x, hy + cellSize * HEXAGON_OFFSETS[3].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[4].x, hy + cellSize * HEXAGON_OFFSETS[4].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (y < 1) {\n          ctx.strokeStyle = \"red\";\n          ctx.lineWidth = 3;\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[4].x, hy + cellSize * HEXAGON_OFFSETS[4].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[5].x, hy + cellSize * HEXAGON_OFFSETS[5].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (x === 0) {\n          ctx.strokeStyle = \"blue\";\n          ctx.lineWidth = 3;\n        }\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(hx + cellSize * HEXAGON_OFFSETS[5].x, hy + cellSize * HEXAGON_OFFSETS[5].y);\n        ctx.lineTo(hx + cellSize * HEXAGON_OFFSETS[0].x, hy + cellSize * HEXAGON_OFFSETS[0].y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 1;\n        if (x === 0 && y < boardHeight - 1) {\n          ctx.strokeStyle = \"blue\";\n          ctx.lineWidth = 3;\n        }\n        if (y === boardHeight - 1) {\n          ctx.strokeStyle = \"red\";\n          ctx.lineWidth = 3;\n        }\n        ctx.stroke();\n      }\n    }\n  };\n\n  const redrawBoard = (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    drawHexagonEdges(ctx);\n    for (const cell of cells) {\n      drawCell(ctx, cell);\n    }\n  };\n</script>\n\n<div class=\"container\">\n  <canvas bind:this={canvas} on:click|stopPropagation={onCanvasClick} />\n</div>\n\n<style lang=\"scss\">\n  .container {\n    grid-column: 2;\n    background-color: lightgreen;\n\n    @media (max-width: 800px) {\n      height: 80vw;\n    }\n\n    canvas {\n      width: 100%;\n      height: 100%;\n      background-color: black;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { afterUpdate, beforeUpdate, createEventDispatcher } from \"svelte\";\n\n  import { HexGame } from \"src/hex/Hex\";\n  import type { DarkHexGame } from \"src/hex/DarkHex\";\n  import { HexPlayerColor } from \"src/hex/HexBoard\";\n  import { select_options } from \"svelte/internal\";\n\n  export let currentGame: HexGame | DarkHexGame | undefined;\n\n  const dispatch = createEventDispatcher();\n\n  let title: string;\n  $: {\n    if (currentGame) {\n      if (currentGame.win !== undefined) {\n        title = (currentGame.win === HexPlayerColor.White ? \"Blue\" : \"Red\") + \" wins\";\n      } else if (currentGame.quited) {\n        title = \"Game ended\";\n      } else if (!currentGame.started) {\n        title = \"Waiting for game to start\";\n      } else if (currentGame.currentPlayer !== undefined) {\n        title = (currentGame.currentPlayer === HexPlayerColor.White ? \"Blue\" : \"Red\") + \"'s turn\";\n      }\n    } else {\n      title = \"No game\";\n    }\n  }\n\n  let text: string;\n\n  const onSwapClick = () => {\n    dispatch(\"swap\");\n  };\n\n  const sendMessage = () => {\n    dispatch(\"sendMessage\", text);\n    text = \"\";\n  };\n\n  const handleInputKeydown = (event: KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  let chatMessagesDiv: HTMLDivElement;\n  let autoscroll = false;\n\n  beforeUpdate(() => {\n    autoscroll =\n      chatMessagesDiv && chatMessagesDiv.offsetHeight + chatMessagesDiv.scrollTop > chatMessagesDiv.scrollHeight - 10;\n  });\n\n  afterUpdate(() => {\n    if (autoscroll) chatMessagesDiv.scrollTo(0, chatMessagesDiv.scrollHeight);\n  });\n</script>\n\n<div class=\"container\">\n  <h2 class=\"title\">{title}</h2>\n  <div class=\"swap-button-container\">\n    <button\n      on:click={onSwapClick}\n      disabled={!(currentGame instanceof HexGame) ||\n        !currentGame.options.swapRule ||\n        currentGame.options.playerTypes[currentGame.currentPlayer] !== \"local\" ||\n        currentGame.history.length !== 1}>Swap</button\n    >\n  </div>\n  <div class=\"chat-container\">\n    <div class=\"chat-messages\" bind:this={chatMessagesDiv}>\n      {#each currentGame?.messages || [] as { source, message }}\n        {#if source === \"link\"}\n          <div class=\"message-game\">Invite link: <a href={message} target=\"_blank\">{message}</a></div>\n        {:else if source === \"game\"}\n          <div class=\"message-game\">{message}</div>\n        {:else if (source === \"blue\" && currentGame?.options.playerTypes[1] === \"local\") || (source === \"red\" && currentGame?.options.playerTypes[0] === \"local\")}\n          <div class=\"message-local\">{message}</div>\n        {:else if (source === \"blue\" && currentGame?.options.playerTypes[1] === \"remote\") || (source === \"red\" && currentGame?.options.playerTypes[0] === \"remote\")}\n          <div class=\"message-remote\">{message}</div>\n        {:else}\n          <div>{message}</div>\n        {/if}\n      {/each}\n    </div>\n    <div class=\"chat-box\">\n      <input type=\"text\" bind:value={text} on:keydown={handleInputKeydown} />\n      <button on:click={sendMessage}>Send</button>\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .container {\n    grid-column: 3;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    /* align-items: center; */\n    background-color: lightblue;\n    padding: 0;\n  }\n\n  .title {\n    text-align: center;\n    font-size: 2.4em;\n    margin: 0;\n    padding-top: 1em;\n    padding-bottom: 0.6em;\n  }\n\n  .swap-button-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .chat-container {\n    margin-top: auto;\n    flex: 0 0 400px;\n    width: 100%;\n    max-width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    background-color: white;\n  }\n\n  .chat-messages {\n    flex: 1 0 120px;\n    /* width: 100%; */\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding: 2px;\n  }\n\n  .message-game {\n    margin: 5px;\n    padding: 5px;\n    border-radius: 6px;\n    background-color: rgb(201, 161, 161);\n    white-space: pre-wrap;\n    overflow-wrap: break-word;\n  }\n\n  .message-local {\n    margin: 5px;\n    padding: 5px;\n    border-radius: 6px;\n    background-color: rgb(146, 174, 200);\n    white-space: pre-wrap;\n    overflow-wrap: break-word;\n  }\n\n  .message-remote {\n    margin: 5px;\n    padding: 5px;\n    border-radius: 6px;\n    background-color: rgb(175, 175, 175);\n    white-space: pre-wrap;\n    overflow-wrap: break-word;\n  }\n\n  .chat-box {\n    flex: 0 0 36px;\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n\n    input {\n      flex: 1 0 0;\n      height: 100%;\n      border-radius: 0px;\n      border: 1px solid black;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    button {\n      flex: 0 0 40px;\n      height: 100%;\n      border-radius: 0px;\n      border: 1px solid black;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { io, Socket } from \"socket.io-client\";\n\n  import type { HexPlayerColor } from \"src/hex/HexBoard\";\n  import type { HexPlayerType, ReverseHexPlayerType } from \"src/hex/Hex\";\n  import type { DarkHexPlayerType, DarkReverseHexPlayerType } from \"src/hex/DarkHex\";\n  import { HexState, switchPlayer } from \"src/hex/HexBoard\";\n  import { HexGame } from \"src/hex/Hex\";\n  import { DarkHexGame } from \"src/hex/DarkHex\";\n\n  import type { HexMenuOptions } from \"src/components/MainMenu.svelte\";\n  import MainMenu from \"src/components/MainMenu.svelte\";\n  import HexBoard from \"src/components/HexBoard.svelte\";\n  import GameMenu from \"src/components/GameMenu.svelte\";\n\n  let currentGame: HexGame | DarkHexGame | undefined;\n  let lastState: HexState | undefined;\n\n  onMount(() => {\n    const params = new URLSearchParams(window.location.search);\n    const game = params.get(\"game\");\n    const gameid = params.get(\"gameid\");\n    const serverAddress = params.get(\"serverAddress\");\n    params.delete(\"game\");\n    params.delete(\"gameid\");\n    params.delete(\"serverAddress\");\n\n    window.history.replaceState(\"\", \"\", \"?\" + params.toString());\n\n    if (game && gameid && serverAddress) {\n      hexConnect(game, gameid, decodeURIComponent(serverAddress));\n    }\n  });\n\n  const hexConnect = (game: string, gameid: string, serverAddress: string) => {\n    const url = new URL(game, serverAddress);\n    const socket = io(url.toString(), {\n      query: { gameid: gameid },\n      reconnection: false,\n    });\n\n    socket.on(\"joined\", (options: HexMenuOptions) => {\n      if (game === \"hex\") {\n        options.dark = false;\n      } else if (game === \"darkhex\") {\n        options.dark = true;\n      }\n      newGame(options, socket);\n    });\n  };\n\n  const newGame = (options: HexMenuOptions, socket?: Socket) => {\n    if (currentGame) {\n      if (currentGame.win === undefined && !currentGame.quited) {\n        if (!window.confirm(\"Do you want to stop the current the game?\")) {\n          return;\n        }\n      }\n      currentGame.quit();\n    }\n\n    if (options.dark) {\n      currentGame = new DarkHexGame(\n        { ...options, playerTypes: options.playerTypes as (DarkHexPlayerType | DarkReverseHexPlayerType)[] },\n        onHexGameUpdate,\n        socket,\n      );\n    } else {\n      currentGame = new HexGame(\n        { ...options, playerTypes: options.playerTypes as (HexPlayerType | ReverseHexPlayerType)[] },\n        onHexGameUpdate,\n        socket,\n      );\n    }\n\n    onHexGameUpdate(currentGame);\n  };\n\n  const onHexBoardClick = (event: CustomEvent<number>) => {\n    currentGame?.local_move(event.detail);\n  };\n\n  const onHexGameUpdate = (hexGame: HexGame | DarkHexGame) => {\n    currentGame = hexGame;\n    if (hexGame instanceof HexGame) {\n      lastState = hexGame.currentState;\n    } else {\n      if (hexGame.win !== undefined) {\n        lastState = hexGame.currentState;\n      } else {\n        if (hexGame.options.playerTypes[hexGame.currentPlayer] === \"local\") {\n          lastState = { board: hexGame.visibleBoards[hexGame.currentPlayer]! };\n        } else if (hexGame.options.playerTypes[switchPlayer(hexGame.currentPlayer)] === \"local\") {\n          lastState = { board: hexGame.visibleBoards[switchPlayer(hexGame.currentPlayer)]! };\n        } else {\n          lastState = hexGame.currentState;\n        }\n      }\n    }\n  };\n\n  const sendMessage = (event: CustomEvent<string>) => {\n    if (currentGame) {\n      currentGame.sendMessage(event.detail);\n    }\n  };\n</script>\n\n<div class=\"gameui\">\n  <MainMenu\n    on:submit={(event) => {\n      newGame(event.detail);\n    }}\n  />\n  <HexBoard\n    boardWidth={currentGame?.board.width || 0}\n    boardHeight={currentGame?.board.height || 0}\n    hexState={lastState || new HexState(0)}\n    on:cellClick={onHexBoardClick}\n  />\n  <GameMenu\n    {currentGame}\n    on:swap={() => {\n      if (currentGame instanceof HexGame) {\n        currentGame.local_swap();\n      }\n    }}\n    on:sendMessage={sendMessage}\n  />\n</div>\n\n<a\n  href=\"https://github.com/sergmister/hex-online\"\n  target=\"_blank\"\n  class=\"github-corner\"\n  aria-label=\"View source on GitHub\"\n  ><svg\n    width=\"80\"\n    height=\"80\"\n    viewBox=\"0 0 250 250\"\n    style=\"fill:#fff; color:#151513; position: absolute; top: 0; border: 0; right: 0;\"\n    aria-hidden=\"true\"\n    ><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" /><path\n      d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      fill=\"currentColor\"\n      style=\"transform-origin: 130px 106px;\"\n      class=\"octo-arm\"\n    /><path\n      d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      fill=\"currentColor\"\n      class=\"octo-body\"\n    /></svg\n  ></a\n>\n\n<style lang=\"scss\">\n  .gameui {\n    display: grid;\n    grid-template-columns: minmax(280px, 1fr) minmax(320px, 4fr) minmax(280px, 1fr);\n    grid-template-rows: 100vh;\n  }\n\n  @media (max-width: 880px) {\n    .gameui {\n      display: block;\n    }\n  }\n\n  .github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  @keyframes octocat-wave {\n    0%,\n    100% {\n      transform: rotate(0);\n    }\n    20%,\n    60% {\n      transform: rotate(-25deg);\n    }\n    40%,\n    80% {\n      transform: rotate(10deg);\n    }\n  }\n  @media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n      animation: none;\n    }\n    .github-corner .octo-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import HexOnline from \"src/components/HexOnline.svelte\";\n</script>\n\n<main>\n  <HexOnline />\n</main>\n\n<style lang=\"scss\">\n</style>\n","import \"src/global.css\";\nimport App from \"src/App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","on_destroy","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","re","parts","parseuri","str","src","substring","replace","query","exec","uri","source","host","authority","ipv6uri","pathNames","path","regx","names","split","substr","queryKey","$0","$1","$2","s","h","w","y","ms","val","String","match","parseFloat","toLowerCase","parse","isFinite","long","msAbs","plural","fmtLong","round","fmtShort","JSON","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","args","enabled","self","curr","Number","Date","diff","prev","coerce","unshift","format","formatter","formatters","formatArgs","log","apply","useColors","color","selectColor","extend","defineProperty","enumerable","configurable","namespaces","v","delimiter","newDebug","toNamespace","regexp","toString","default","stack","message","disable","skips","join","enable","save","len","RegExp","test","humanize","require$$0","console","warn","hash","charCodeAt","colors","load","exports","module","lastC","storage","setItem","removeItem","error","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","localStorage","localstorage","warned","j","url_1","require$$1","loc","location","protocol","charAt","port","id","href","hasCorsModule","XMLHttpRequest","err","globalThis_browser","Function","hasCORS","globalThis","xmlhttprequest","opts","xdomain","xscheme","enablesXDR","XDomainRequest","concat","PACKET_TYPES","PACKET_TYPES_REVERSE","commons","withNativeBlob","Blob","prototype","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","chars","encodePacket_browser","supportsBinary","isView","buffer","arraybuffer","bytes","Uint8Array","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","ERROR_PACKET","base64decoder","decodeBase64Packet","binaryType","decoded","decode","mapBinary","encodePacket","decodePacket","encodedPacket","SEPARATOR","fromCharCode","lib","encodePayload","packets","encodedPackets","count","packet","decodePayload","encodedPayload","decodedPacket","Emitter","mixin","on","_callbacks","once","off","arguments","removeListener","removeAllListeners","cb","emit","listeners","hasListeners","parser","require$$2","transport","constructor","super","readyState","socket","onError","msg","desc","description","open","doOpen","close","doClose","onClose","send","write","onOpen","writable","onData","onPacket","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","alphabet","seed","encode","num","encoded","floor","yeast","now","yeast_1","Transport","parseqs","require$$3","require$$4","polling","poll","pause","onPause","total","doPoll","doWrite","schema","secure","timestampRequests","timestampParam","sid","b64","hostname","reduce","acc","k","Polling","pick","require$$5","empty","hasXHR2","responseType","Request","method","async","undefined","xd","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","hasXDR","onLoad","onerror","responseText","onreadystatechange","status","setTimeout","requestsCount","requests","onSuccess","cleanup","fromError","abort","attachEvent","unloadHandler","isSSL","forceBase64","request","assign","req","bind","pollXhr","rNewline","rEscapedNewline","pollingJsonp","___eio","script","form","iframe","insertAt","getElementsByTagName","head","body","area","iframeId","className","position","top","left","complete","initIframe","action","html","submit","nextTick","websocketConstructor_browser","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","require$$6","isReactNative","product","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","lastPacket","compress","perMessageDeflate","Buffer","byteLength","threshold","websocket","XHR","JSONP","jsonp","forceJSONP","transports","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","offlineEventListener","createTransport","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","freezeTransport","onTransportClose","onupgrade","to","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","clearTimeout","cleanupAndClose","waitForUpgrade","reason","pingIntervalTimer","filteredUpgrades","isBinary_1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","binary","is_binary_1","_deconstructPacket","buffers","placeholder","_placeholder","newData","_reconstructPacket","packetData","pack","attachments","binary_1","PacketType","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","deconstructPacket","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","reconstructPacket","on_1","typedEvents","listener","emitReserved","socket_io_parser_1","typed_events_1","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","StrictEventEmitter","io","receiveBuffer","sendBuffer","ids","acks","flags","connected","disconnected","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","isTransportWritable","engine","volatile","_packet","onconnect","onevent","onack","ondisconnect","ack","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","backo2","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","manager","eio","socket_1","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_a","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","timer","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","manager_1","cache","parsed","url","sameNamespace","forceNew","multiplex","manager_2","HexPlayerColor","CellState","HexState","size","board","Empty","HexBoard","width","height","neighbor_list","u","x","cell","getIndex","getXY","pos","dfs","state","eq_cell_state","move_cell_state","neighbors","neighbor","move","player","Black","north_connected","south_connected","BlackNorth","BlackSouth","BlackWin","White","west_connected","east_connected","WhiteWest","WhiteEast","WhiteWin","switchPlayer","reduceCellState","cellState","RandomAI","hexBoard","getHexMove","emptyCells","getDarkHexMove","visibleBoard","getReverseHexMove","getDarkReverseHexMove","MostWinningCellAI","winArray","newState","currentPlayer","newEmptyCells","shuffle","maxIndex","emptyCell","array","currentIndex","randomIndex","HexPlayerType","ReverseHexPlayerType","DarkHexPlayerType","DarkReverseHexPlayerType","HexPlayer","ai","HexGame","reverse","swapRule","playerTypes","serverAddress","onUpdateCallback","players","history","messages","started","quited","currentState","online","Random","Remote","Local","MostWinningCell","socket_connect","nextPlayer","moveInterval","URL","inviteLink","quit","moveInfo","swap","sendMessage","clearInterval","local_move","win","gameOver","local_swap","swapPos","DarkHexPlayer","DarkHexGame","visibleBoards","pending","switchColor","remote_move","values","dark","preventDefault","HexGames","hexGame","Hex","playerTypeEnum","dispatch","DarkHex","ReverseHex","DarkReverseHex","switchHexGame","alert","stopPropagation","backgroundColor","SQRT3","sqrt","SQRT3_2","HEXAGON_OFFSETS","boardWidth","boardHeight","hexState","canvas","cellSize","cells","resizeObserver","getContext","ResizeObserver","observe","clientWidth","clientHeight","canvasX","canvasY","calculateCellCenters","redrawBoard","centerX","centerY","xoffset","yoffset","updateCellState","beginPath","arc","PI","fillStyle","drawCell","fillRect","lineCap","hx","hy","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawHexagonEdges","partialUpdate","rect","getBoundingClientRect","clickX","clickY","hypot","getClickedCell","clientX","clientY","iterations","currentGame","title","chatMessagesDiv","autoscroll","offsetHeight","scrollTop","scrollHeight","afterUpdate","scrollTo","lastState","params","URLSearchParams","search","game","gameid","replaceState","hexConnect","newGame","confirm","onHexGameUpdate"],"mappings":"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"}